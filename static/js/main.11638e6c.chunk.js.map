{"version":3,"sources":["component/ModalPage.js","component/Body.js","App.js","serviceWorker.js","index.js"],"names":["ModalPage","props","Modal","size","centered","show","modalShow","onHide","setModalShow","Header","Title","Body","Form","Control","value","dataState","inputNama","onChange","e","handleInput","type","placeholder","inputJabatan","inputGender","inputDob","Footer","Button","onClick","closeModal","variant","simpanData","state","dataKaryawan","valueSearch","idInput","panggilSemua","bind","panggilById","search","hapusData","clearInput","id","fetch","then","response","json","hasil","setState","nama_karyawan","jabatan","jenis_kelamin","tanggal_lahir","this","alert","method","body","JSON","stringify","headers","result","stringfy","target","console","log","Container","Row","style","marginTop","Col","lg","width","height","backgroundColor","align","reverse","filter","valueFilter","toLowerCase","includes","map","index","Card","marginLeft","key","Text","marginRight","Component","App","React","useState","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.11638e6c.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Modal, Button, Form } from 'react-bootstrap';\r\n\r\nfunction ModalPage(props){\r\n\treturn(\r\n\t\t<Modal size=\"lg\" centered show={props.modalShow} onHide={()=>props.setModalShow(true)}>\r\n\t\t\t<Modal.Header>\r\n\t\t\t\t<Modal.Title>Data Karyawan</Modal.Title>\r\n\t\t\t</Modal.Header>\r\n\r\n\t\t\t<Modal.Body>\r\n\t\t\t\tNama Karyawan <Form.Control value={props.dataState.inputNama} onChange={(e)=>props.handleInput('inputNama', e)} type=\"text\" placeholder=\"Masukan Nama\" />\r\n\t\t\t\tJabatan <Form.Control value={props.dataState.inputJabatan} onChange={(e)=>props.handleInput('inputJabatan', e)} type=\"text\" placeholder=\"Masukan Jabatan\" />\r\n\t\t\t\tJenis Kelamin <Form.Control value={props.dataState.inputGender} onChange={(e)=>props.handleInput('inputGender', e)} type=\"text\" placeholder=\"Masukan Jenis Kelamin\" />\r\n\t\t\t\tTanggal Lahir<Form.Control value={props.dataState.inputDob} onChange={(e)=>props.handleInput('inputDob', e)} type=\"date\" placeholder=\"Tanggal Lahir mm/dd/yyyy\" />\r\n\t\t\t</Modal.Body>\r\n\r\n\t\t\t<Modal.Footer>\r\n\t\t\t\t<Button onClick={()=>props.closeModal()} variant=\"secondary\">Close</Button>\r\n\t\t\t\t<Button onClick={()=>props.simpanData()} variant=\"success\">Simpan</Button>\r\n\t\t\t</Modal.Footer>\r\n\r\n\t\t</Modal>\r\n\t\t)\r\n} \r\n\r\nexport default ModalPage;","import React, { Component } from 'react';\r\nimport { Container, Row, Col, Form, Button, Card } from 'react-bootstrap';\r\nimport ModalPage from './ModalPage';\r\n\r\nclass Body extends Component{\r\n\tconstructor(props){\r\n\t\tsuper(props)\r\n\t\tthis.state={\r\n\t\t\tdataKaryawan: [],\r\n\t\t\tvalueSearch: '',\r\n\t\t\tinputNama: '',\r\n\t\t\tinputJabatan: '',\r\n\t\t\tinputGender: '',\r\n\t\t\tinputDob: '',\r\n\t\t\tidInput: ''\r\n\t\t}\r\n\t\tthis.panggilSemua = this.panggilSemua.bind(this)\r\n\t\tthis.panggilById = this.panggilById.bind(this)\r\n\t\tthis.search = this.search.bind(this)\r\n\t\tthis.hapusData = this.hapusData.bind(this)\r\n\t\tthis.closeModal = this.closeModal.bind(this)\r\n\t\tthis.handleInput = this.handleInput.bind(this)\r\n\t\tthis.clearInput = this.clearInput.bind(this)\r\n\t\tthis.simpanData = this.simpanData.bind(this)\r\n\t}\r\n\r\n\tpanggilById(id){\r\n\t\tfetch(`http://localhost:3000/data-karyawan/${id}`)\r\n\t\t.then((response)=> response.json())\r\n\t\t.then((hasil =>{\r\n\t\t\tthis.props.setModalShow(true)\r\n\t\t\tthis.setState(\r\n\t\t\t{\r\n\t\t\t\tinputNama: hasil.nama_karyawan,\r\n\t\t\t\tinputJabatan: hasil.jabatan,\r\n\t\t\t\tinputGender: hasil.jenis_kelamin,\r\n\t\t\t\tinputDob: hasil.tanggal_lahir,\r\n\t\t\t})\r\n\t\t})) \r\n\t}\r\n\r\n\tsimpanData(){\r\n\t\tif (this.state.inputNama === \"\" || this.state.inputJabatan === \"\" || this.state.inputGender === \"\" || this.state.inputDob === \"\"){\r\n\r\n\t\talert(\"Silakan isi data Karyawan terlebih dahulu....\")\r\n\t\t}else if(this.state.idInput === \"\"){\r\n\t\t\tfetch(`http://localhost:3000/data-karyawan`, {\r\n\t\t\t\tmethod:'POST',\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\tnama_karyawan: this.state.inputNama,\r\n\t\t\t\t\tjabatan: this.state.inputJabatan,\r\n\t\t\t\t\tjenis_kelamin: this.state.inputGender,\r\n\t\t\t\t\ttanggal_lahir: this.state.inputDob,\r\n\t\t\t\t}),\r\n\t\t\t\theaders:{\r\n\t\t\t\t\t'Content-type': 'application/json; charset=UTF-8',\r\n\t\t\t\t},\r\n\t\t\t}).then((response)=>response.json())\r\n\t\t\t  .then((result=>{\r\n\t\t\t  \t  this.closeModal()\r\n\t\t\t  \t  this.panggilSemua()\r\n\t\t\t  }))\r\n\t\t}else{\r\n\t\t\tfetch(`http://localhost:3000/data-karyawan/${this.state.idInput}`,{\r\n\t\t\t\tmethod: 'PUT',\r\n\t\t\t\tbody: JSON.stringfy({\r\n\t\t\t\t\tnama_karyawan:this.state.inputNama,\r\n\t\t\t\t\tjabatan: this.state.inputJabatan,\r\n\t\t\t\t\tjenis_kelamin: this.state.inputGender,\r\n\t\t\t\t\ttanggal_lahir: this.state.inputDob,\r\n\t\t\t\t}),\r\n\t\t\t\theaders:{\r\n\t\t\t\t\t'Content-type': 'application/json; charset=UTF-8',\t\r\n\t\t\t\t},\r\n\t\t\t}).then((response) => response.json())\r\n\t\t\t  .then((hasil =>{\r\n\t\t\t  \tthis.panggilSemua();\r\n\t\t\t  \tthis.props.setModalShow(false);\r\n\t\t\t  \tthis.clearInput();\r\n\t\t\t  }))\r\n\t\t}\r\n\t}\r\n\r\n\thandleInput(value, e){\r\n\t\tthis.setState({[value]: e.target.value})\r\n\t}\r\n\r\n\r\n\tcloseModal(){\r\n\t\tthis.props.setModalShow(false)\r\n\t\tthis.clearInput()\r\n\t}\r\n\r\n\r\n\tclearInput(){\r\n\t\tthis.setState(\r\n\t\t{\r\n\t\t\tinputNama: '',\r\n\t\t\tinputJabatan: '',\r\n\t\t\tinputGender: '',\r\n\t\t\tinputDob: '',\r\n\t\t\tidInput: ''\r\n\t\t}\r\n\t\t)\r\n\t}\r\n\r\n\thapusData(id){\r\n\t\tfetch(`http://localhost:3000/data-karyawan/${id}`, {method:'DELETE',}).then((response=>{\r\n\t\t\talert('Data sudah terhapus .....')\r\n\t\t\tthis.panggilSemua()\r\n\t\t}))\r\n\t}\r\n\r\n\tsearch(e){\r\n\t\tthis.setState({valueSearch: e.target.value})\r\n\t}\r\n\r\n\r\n\tpanggilSemua(){\r\n\t\tfetch(`http://localhost:3000/data-karyawan`)\r\n\t\t.then((response)=> response.json())\r\n\t\t.then((hasil)=> this.setState({dataKaryawan: hasil}))\r\n\t}\r\n\r\n\t\r\n\tcomponentDidMount(){\r\n\t\tthis.panggilSemua()\r\n\t}\r\n\r\n\trender(){\r\n\t\tconsole.log(this.state.valueSearch)\r\n\t\treturn(\r\n\t\t\t<Container>\r\n\t\t\t<ModalPage\r\n\t\t\tmodalShow={this.props.modalShow}\r\n\t\t\tsetModalShow={this.props.setModalShow}\r\n\t\t\tcloseModal={this.closeModal}\r\n\t\t\thandleInput={this.handleInput}\r\n\t\t\tdataState={this.state}\r\n\t\t\tsimpanData={this.simpanData}  \r\n\t\t\t/>\r\n\t\t\t<Row style={{marginTop: '20px'}}>\r\n\t\t\t<Col lg={12} style={{width: 50, height: 50, backgroundColor: 'powderblue'}}><h1 align=\"center\">DATA KARYAWAN</h1></Col>\r\n\t\t\t</Row> \r\n\r\n\t\t\t<Row style={{marginTop: '30px'}}>\r\n\t\t\t<Col>Cari Data Karyawan</Col>\r\n\t\t\t<Col lg={8}>\r\n\t\t\t\t<Form.Control type=\"text\" placeholder=\"cari gambar\" value={this.state.valueSearch} onChange={(e)=>this.search(e)}></Form.Control>\r\n\t\t\t</Col>\r\n\t\t\t\r\n\t\t\t<Col lg={2}>\r\n\t\t\t    <Button onClick={()=>this.props.setModalShow(true)} variant=\"primary\">Tambah Data</Button>\r\n\t\t\t</Col>\r\n\t\t\t</Row>\r\n\r\n\t\t\t<Row>\r\n\t\t\t{\r\n\t\t\t\tthis.state.dataKaryawan.reverse().filter(valueFilter => valueFilter.nama_karyawan.toLowerCase().includes(this.state.valueSearch.toLowerCase())).map((value, index)=>{\r\n\r\n\t\t\t\t\treturn(\r\n\t\t\t\t\t\t<Card style={{width: '200px', marginTop: '30px', marginLeft: '20px'}} key={index}>\r\n\t\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t\t<Card.Text>Nama : {value.nama_karyawan}</Card.Text>\r\n\t\t\t\t\t\t\t<Card.Text>Jabatan : {value.jabatan}</Card.Text>\r\n\t\t\t\t\t\t\t<Card.Text>Jenis Kelamin : {value.jenis_kelamin}</Card.Text>\r\n\t\t\t\t\t\t\t<Card.Text>Tanggal Lahir :{value.tanggal_lahir}</Card.Text>\r\n\t\t\t\t\t\t</Card.Body>\r\n\r\n\t\t\t\t\t\t<Card.Footer>\r\n\t\t\t\t\t\t<Button onClick={()=>this.hapusData(value.id)} style={{marginRight: '5%'}} variant=\"danger\">Hapus</Button>\r\n\t\t\t\t\t\t<Button onClick={()=>this.panggilById(value.id)} variant=\"primary\">Edit</Button>\r\n\t\t\t\t\t\t</Card.Footer>\r\n\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\t</Row>\r\n\t\t\t</Container>\r\n\t\t\t)\r\n\t}\r\n\r\n} \r\n\r\nexport default Body;","import React from 'react';\nimport './css/bootstrap.min.css';\nimport Body from './component/Body'\n\nfunction App() {\n  const[modalShow, setModalShow] = React.useState(false)\n  return (\n    <div>\n       <Body modalShow={modalShow} setModalShow={setModalShow} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}